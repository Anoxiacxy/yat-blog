<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="https://anoxiacxy.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://anoxiacxy.github.io/" rel="alternate" type="text/html" /><updated>2022-01-24T09:33:55+00:00</updated><id>https://anoxiacxy.github.io/feed.xml</id><title type="html">Anoxiacxy</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><author><name>Xueyang Chen</name></author><entry><title type="html">Welcome to Jekyll!</title><link href="https://anoxiacxy.github.io/jekyll/2018/12/07/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-12-07T00:00:00+00:00</published><updated>2018-12-07T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/jekyll/2018/12/07/welcome-to-jekyll</id><content type="html" xml:base="https://anoxiacxy.github.io/jekyll/2018/12/07/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>To add new posts, simply add a file in the <code class="language-plaintext highlighter-rouge">_posts</code> directory that follows the convention <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-name-of-post.ext</code> and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<h2 id="section-1">section 1</h2>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
<span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<h2 id="section-2">section 2</h2>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>

<p>$ a * b = c ^ b $</p>

<p>$ 2^{\frac{n-1}{3}} $</p>

<p>$ \int_a^b f(x)\,dx. $</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
  <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"Hello World!"</span><span class="p">;</span>
  <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1">// prints 'Hi, Tom' to STDOUT.</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Person</span><span class="p">:</span>
  <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">age</span><span class="p">):</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
    <span class="bp">self</span><span class="p">.</span><span class="n">age</span> <span class="o">=</span> <span class="n">age</span>

<span class="n">p1</span> <span class="o">=</span> <span class="n">Person</span><span class="p">(</span><span class="s">"John"</span><span class="p">,</span> <span class="mi">36</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">p1</span><span class="p">.</span><span class="n">name</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">p1</span><span class="p">.</span><span class="n">age</span><span class="p">)</span>
</code></pre></div></div>]]></content><author><name>Jeffrey</name></author><category term="jekyll" /><category term="jekyll" /><category term="theme" /><category term="yat" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">An exhibit of Markdown</title><link href="https://anoxiacxy.github.io/markdown/2018/12/05/an-exhibit-of-markdown.html" rel="alternate" type="text/html" title="An exhibit of Markdown" /><published>2018-12-05T00:00:00+00:00</published><updated>2018-12-05T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/markdown/2018/12/05/an-exhibit-of-markdown</id><content type="html" xml:base="https://anoxiacxy.github.io/markdown/2018/12/05/an-exhibit-of-markdown.html"><![CDATA[<p>This note demonstrates some of what <a href="http://daringfireball.net/projects/markdown/">Markdown</a> is capable of doing.</p>

<h2 id="an-exhibit-of-markdown">An exhibit of Markdown</h2>

<p><em>Note: Feel free to play with this page. Unlike regular notes, this doesn’t automatically save itself.</em></p>

<h2 id="basic-formatting">Basic formatting</h2>

<p>Paragraphs can be written like so. A paragraph is the basic block of Markdown. A paragraph is what text will turn into when there is no reason it should become anything else.</p>

<p>Paragraphs must be separated by a blank line. Basic formatting of <em>italics</em> and <strong>bold</strong> is supported. This <em>can be <strong>nested</strong> like</em> so.</p>

<h2 id="lists">Lists</h2>

<h3 id="ordered-list">Ordered list</h3>

<ol>
  <li>Item 1</li>
  <li>A second item</li>
  <li>Number 3</li>
  <li>Ⅳ</li>
</ol>

<p><em>Note: the fourth item uses the Unicode character for <a href="http://www.fileformat.info/info/unicode/char/2163/index.htm">Roman numeral four</a>.</em></p>

<h3 id="unordered-list">Unordered list</h3>

<ul>
  <li>An item</li>
  <li>Another item</li>
  <li>Yet another item</li>
  <li>And there’s more…</li>
</ul>

<h2 id="paragraph-modifiers">Paragraph modifiers</h2>

<h3 id="code-block">Code block</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Code blocks are very useful for developers and other people who look at code or other things that are written in plain text. As you can see, it uses a fixed-width font.
</code></pre></div></div>

<p>You can also make <code class="language-plaintext highlighter-rouge">inline code</code> to add code into other things.</p>

<h3 id="quote">Quote</h3>

<blockquote>
  <p>Here is a quote. What this is should be self explanatory. Quotes are automatically indented when they are used.</p>
</blockquote>

<h2 id="headings">Headings</h2>

<p>There are six levels of headings. They correspond with the six levels of HTML headings. You’ve probably noticed them already in the page. Each level down uses one more hash character.</p>

<h3 id="headings-can-also-contain-formatting">Headings <em>can</em> also contain <strong>formatting</strong></h3>

<h3 id="they-can-even-contain-inline-code">They can even contain <code class="language-plaintext highlighter-rouge">inline code</code></h3>

<p>Of course, demonstrating what headings look like messes up the structure of the page.</p>

<p>I don’t recommend using more than three or four levels of headings here, because, when you’re smallest heading isn’t too small, and you’re largest heading isn’t too big, and you want each size up to look noticeably larger and more important, there there are only so many sizes that you can use.</p>

<h2 id="urls">URLs</h2>

<p>URLs can be made in a handful of ways:</p>

<ul>
  <li>A named link to <a href="http://www.markitdown.net/">MarkItDown</a>. The easiest way to do these is to select what you want to make a link and hit <code class="language-plaintext highlighter-rouge">Ctrl+L</code>.</li>
  <li>Another named link to <a href="http://www.markitdown.net/">MarkItDown</a></li>
  <li>Sometimes you just want a URL like <a href="http://www.markitdown.net/">http://www.markitdown.net/</a>.</li>
</ul>

<h2 id="horizontal-rule">Horizontal rule</h2>

<p>A horizontal rule is a line that goes across the middle of the page.</p>

<hr />

<p>It’s sometimes handy for breaking things up.</p>

<h2 id="images">Images</h2>

<p>Markdown can also contain images. I’ll need to add something here sometime.</p>

<h2 id="finally">Finally</h2>

<p>There’s actually a lot more to Markdown than this. See the official <a href="http://daringfireball.net/projects/markdown/basics">introduction</a> and <a href="http://daringfireball.net/projects/markdown/syntax">syntax</a> for more information. However, be aware that this is not using the official implementation, and this might work subtly differently in some of the little things.</p>]]></content><author><name>Xueyang Chen</name></author><category term="markdown" /><category term="example" /><category term="markdown" /><summary type="html"><![CDATA[This note demonstrates some of what Markdown is capable of doing.]]></summary></entry><entry><title type="html">Mathjax Test</title><link href="https://anoxiacxy.github.io/markdown/2018/05/26/mathjax-test.html" rel="alternate" type="text/html" title="Mathjax Test" /><published>2018-05-26T00:00:00+00:00</published><updated>2018-05-26T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/markdown/2018/05/26/mathjax-test</id><content type="html" xml:base="https://anoxiacxy.github.io/markdown/2018/05/26/mathjax-test.html"><![CDATA[<ul>
  <li>A safe integer is an integer that
    <ul>
      <li>can be exactly represented as an IEEE-754 double precision number, and</li>
      <li>whose IEEE-75 representation cannot be the result of rounding any other integer to fit the IEEE-754 representation</li>
    </ul>
  </li>
  <li>For example, $2 ^ {53} - 1$ is a safe integer,
    <ul>
      <li>it can be exactly represented</li>
    </ul>
  </li>
</ul>]]></content><author><name>Xueyang Chen</name></author><category term="markdown" /><category term="test" /><summary type="html"><![CDATA[A safe integer is an integer that can be exactly represented as an IEEE-754 double precision number, and whose IEEE-75 representation cannot be the result of rounding any other integer to fit the IEEE-754 representation For example, $2 ^ {53} - 1$ is a safe integer, it can be exactly represented]]></summary></entry><entry><title type="html">Video example</title><link href="https://anoxiacxy.github.io/example/2017/12/18/video-example.html" rel="alternate" type="text/html" title="Video example" /><published>2017-12-18T00:00:00+00:00</published><updated>2017-12-18T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/example/2017/12/18/video-example</id><content type="html" xml:base="https://anoxiacxy.github.io/example/2017/12/18/video-example.html"><![CDATA[<h2 id="canon-in-d-pachelbels-canon---cello--piano-best-wedding-version">Canon in D (Pachelbel’s Canon) - Cello &amp; Piano [BEST WEDDING VERSION]</h2>
<p>Some of you know that we occasionally play for weddings. As you can imagine, we get a LOT of requests for Canon in D, and we discovered that there were no good arrangements available anywhere for piano and cello! Hard to believe given its popularity. So we decided to make our own! We tried to stick as closely to the original as possible (which was written for three violins and basso continuo), and we performed it <em>not</em> at a snail’s pace so the bride can actually make it down the aisle without putting everyone to sleep. 🙊(Yeah, we said it! Nobody likes a slow processional!) Also, the number one complaint about this piece from cellists is always how booooring it is to play because they literally have to play the same 8 bass notes over and over for the entire piece. Problem solved with this arrangement because the cello never has to play the bass! 🙌(The piano does, but we get lots of other fun stuff too so it’s ok!) So for all you musicians out there playing weddings, we hope you enjoy playing this arrangement a little more than the ones you were used to…You can get it from www.musicnotes.com. 😊Be sure to let us know in the comments if you do!</p>

<p><img src="//www.youtube.com/watch?v=Ptk_1Dc2iPY" alt="" /></p>

<h2 id="gucci-hallucination--the-line-animation--gucci">GUCCI HALLUCINATION / THE LINE ANIMATION / GUCCI</h2>
<p>BACKGROUND /</p>

<p>Gucci share their creative vision through a series of surreal animated paintings by acclaimed artist Ignasi Monreal and The Line Animation studio. The animations make up part of a larger campaign shared via social media, above the line and print.</p>

<p>APPROACH /</p>

<p>Our aim was to ground and accentuate the outlandish scenarios with ambient sound design. Neither proclaiming to be positive or negative, the sound conveys a sense of the uncanny and leaves the audience with nothing but their own interpretations. their creative vision through a series of surreal animated paintings by acclaimed artist Ignasi Monreal and The Line Animation studio. The animations make up part of a larger campaign shared via social media, above the line and print.</p>

<p><img src="https://vimeo.com/263856289" alt="" /></p>

<h2 id="finneas-demos-how-he-builds-songs-for-billie-eilish">FINNEAS Demos How He Builds Songs For Billie Eilish</h2>
<p>Grammy Award-winning musician and producer FINNEAS sits down with Pitchfork and closely examines his creative process while working on some of the biggest hit songs of the past couple years. FINNEAS explores the sounds that brought upon 
some of his greatest musical breakthroughs in songs such as bad guy, bury a friend, ocean eyes, when the party’s over, I Lost a Friend, Used to This and much more.</p>

<p><img src="https://dai.ly/x7tgcev" alt="" /></p>

<h2 id="2019-bmw-vision-m-next-concept-hd">2019 BMW Vision M NEXT Concept (HD)</h2>

<p>In future, drivers will be able to choose whether they wish to be driven or do the driving themselves. With the BMW Vision M NEXT, the BMW Group is revealing its take on how driving pleasure might look in future. It offers a foretaste of the BMW M brand’s electrified future by placing the focus squarely on the actively engaged driver. Intelligent technologies provide comprehensive yet carefully targeted assistance to turn them into the ultimate driver.</p>

<p><img src="https://www.dailymotion.com/video/x7bur2y" alt="" /></p>

<h2 id="this-is-the-poster-image">This is the poster image</h2>
<p>In modern browsers, adding a video to your page is as easy as adding an image. No longer do you need to deal with special plug-ins or require crazy markup, you can do it with a single element.
<img src="//www.html5rocks.com/en/tutorials/video/basics/devstories.webm" alt="video" /></p>]]></content><author><name>Xueyang Chen</name></author><category term="example" /><category term="video" /><summary type="html"><![CDATA[Canon in D (Pachelbel’s Canon) - Cello &amp; Piano [BEST WEDDING VERSION] Some of you know that we occasionally play for weddings. As you can imagine, we get a LOT of requests for Canon in D, and we discovered that there were no good arrangements available anywhere for piano and cello! Hard to believe given its popularity. So we decided to make our own! We tried to stick as closely to the original as possible (which was written for three violins and basso continuo), and we performed it not at a snail’s pace so the bride can actually make it down the aisle without putting everyone to sleep. 🙊(Yeah, we said it! Nobody likes a slow processional!) Also, the number one complaint about this piece from cellists is always how booooring it is to play because they literally have to play the same 8 bass notes over and over for the entire piece. Problem solved with this arrangement because the cello never has to play the bass! 🙌(The piano does, but we get lots of other fun stuff too so it’s ok!) So for all you musicians out there playing weddings, we hope you enjoy playing this arrangement a little more than the ones you were used to…You can get it from www.musicnotes.com. 😊Be sure to let us know in the comments if you do!]]></summary></entry><entry><title type="html">Table example</title><link href="https://anoxiacxy.github.io/example/2017/12/15/table-example.html" rel="alternate" type="text/html" title="Table example" /><published>2017-12-15T00:00:00+00:00</published><updated>2017-12-15T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/example/2017/12/15/table-example</id><content type="html" xml:base="https://anoxiacxy.github.io/example/2017/12/15/table-example.html"><![CDATA[<h2 id="table-example-as-below">Table example as below</h2>

<p><strong>For now, these extended features are provided:</strong></p>

<ul>
  <li>Cells spanning multiple columns</li>
  <li>Cells spanning multiple rows</li>
  <li>Cells text align separately</li>
  <li>Table header not required</li>
  <li>Grouped table header rows or data rows</li>
</ul>

<h3 id="rowspan-and-colspan">Rowspan and Colspan</h3>
<p>^^ in a cell indicates it should be merged with the cell above.<br />
This feature is contributed by <a href="https://github.com/pmccloghrylaing">pmccloghrylaing</a>.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: right">Stage</th>
      <th style="text-align: right">Direct Products</th>
      <th style="text-align: right">ATP Yields</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: right">Glycolysis</td>
      <td style="text-align: right">2 ATP                   |</td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td style="text-align: right">^^</td>
      <td style="text-align: right">2 NADH</td>
      <td style="text-align: right">3–5 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">Pyruvaye oxidation</td>
      <td style="text-align: right">2 NADH</td>
      <td style="text-align: right">5 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">Citric acid cycle</td>
      <td style="text-align: right">2 ATP           |</td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td style="text-align: right">^^</td>
      <td style="text-align: right">6 NADH</td>
      <td style="text-align: right">15 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">^^</td>
      <td style="text-align: right">2 FADH</td>
      <td style="text-align: right">3 ATP</td>
    </tr>
    <tr>
      <td style="text-align: right">30–32 ATP                         ||</td>
      <td style="text-align: right"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
</table>

<p>[ Net ATP yields per hexose]</p>

<h3 id="multiline">Multiline</h3>
<p>A backslash at end to join cell contents with the following lines.<br />
This feature is contributed by <a href="https://github.com/Lucas-C">Lucas-C</a>.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">:     Easy Multiline     :||</th>
      <th style="text-align: left"> </th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange  \</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange  \</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange  \</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
  </tbody>
</table>

<h3 id="headerless">Headerless</h3>
<p>Table header can be eliminated.</p>

<table>
  <tbody>
    <tr>
      <td>♜</td>
      <td> </td>
      <td>♝</td>
      <td>♛</td>
      <td>♚</td>
      <td>♝</td>
      <td>♞</td>
      <td>♜</td>
    </tr>
    <tr>
      <td> </td>
      <td>♟</td>
      <td>♟</td>
      <td>♟</td>
      <td> </td>
      <td>♟</td>
      <td>♟</td>
      <td>♟</td>
    </tr>
    <tr>
      <td>♟</td>
      <td> </td>
      <td>♞</td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td>♗</td>
      <td> </td>
      <td> </td>
      <td>♟</td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td>♙</td>
      <td> </td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td> </td>
      <td>♘</td>
      <td> </td>
      <td> </td>
    </tr>
    <tr>
      <td>♙</td>
      <td>♙</td>
      <td>♙</td>
      <td>♙</td>
      <td> </td>
      <td>♙</td>
      <td>♙</td>
      <td>♙</td>
    </tr>
    <tr>
      <td>♖</td>
      <td>♘</td>
      <td>♗</td>
      <td>♕</td>
      <td>♔</td>
      <td> </td>
      <td> </td>
      <td>♖</td>
    </tr>
  </tbody>
</table>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>|:     Fruits <span class="se">\|\|</span> Food           :|||
|:-------- |:-------- |:------------ |
| Apple    |: Apple  :|    Apple     <span class="err">\</span>
| Banana   |  Banana  |    Banana    <span class="err">\</span>
| Orange   |  Orange  |    Orange    |
|:   Rowspan is 5   :||:  How's it? :|
|^^   A. Peach       ||^^ 1. Fine    |
|^^   B. Orange      ||^^ 2. Bad  $I = <span class="se">\i</span>nt <span class="se">\r</span>ho R^{2} dV$     |
|^^   C. Banana      ||   It's OK! !<span class="p">[</span><span class="nv">example image</span><span class="p">][</span><span class="ss">my-image</span><span class="p">]</span>  |
</code></pre></div></div>

<h3 id="text-alignment">Text Alignment</h3>
<p>Table cell can be set alignment separately.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">\:Fruits         |</th>
      <th style="text-align: left">Food   :</th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left"> </th>
      <th style="text-align: left">Fruits\::        |</th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left">: \:Fruits       :|</th>
      <th style="text-align: left"> </th>
      <th style="text-align: left">:       Food     :|</th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Orange</td>
      <td style="text-align: left">:   Strawberry    :</td>
    </tr>
    <tr>
      <td style="text-align: left">Apple  &amp;  Banana |</td>
      <td style="text-align: left">^^</td>
      <td style="text-align: left">Peach        :|</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>

<table>
  <tbody>
    <tr>
      <td>: \:Fruits       :|</td>
      <td> </td>
      <td>:       Food     :|</td>
      <td> </td>
    </tr>
    <tr>
      <td>Apple</td>
      <td>Banana</td>
      <td>Orange</td>
      <td>:   Strawberry    :</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: left">:     Fruits || Food           :||</th>
      <th style="text-align: left"> </th>
      <th style="text-align: left"> </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">Apple</td>
      <td style="text-align: left">: Apple  :</td>
      <td style="text-align: left">Apple     \</td>
    </tr>
    <tr>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Banana</td>
      <td style="text-align: left">Banana    \</td>
    </tr>
    <tr>
      <td style="text-align: left">Orange</td>
      <td style="text-align: left">Orange</td>
      <td style="text-align: left">Orange</td>
    </tr>
    <tr>
      <td style="text-align: left">:   Rowspan is 5   :|</td>
      <td style="text-align: left">:  How’s it? :</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: left">^^   A. Peach       |</td>
      <td style="text-align: left">^^ 1. Fine</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: left">^^   B. Orange      |</td>
      <td style="text-align: left">^^ 2. Bad  $I = \int \rho R^{2} dV$</td>
      <td style="text-align: left"> </td>
    </tr>
    <tr>
      <td style="text-align: left">^^   C. Banana      |</td>
      <td style="text-align: left">It’s OK! ![example image](http://www.unexpected-vortices.com/sw/rippledoc/example-image.jpg "An exemplary image")</td>
      <td style="text-align: left"> </td>
    </tr>
  </tbody>
</table>]]></content><author><name>Xueyang Chen</name></author><category term="example" /><category term="table" /><summary type="html"><![CDATA[Table example as below]]></summary></entry><entry><title type="html">CLI Greedy Snake</title><link href="https://anoxiacxy.github.io/game/2017/12/10/cli-greedy-snake.html" rel="alternate" type="text/html" title="CLI Greedy Snake" /><published>2017-12-10T00:00:00+00:00</published><updated>2017-12-10T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/game/2017/12/10/cli-greedy-snake</id><content type="html" xml:base="https://anoxiacxy.github.io/game/2017/12/10/cli-greedy-snake.html"><![CDATA[<h2 id="总览">总览</h2>

<p><img src="/assets/images/20171210-GreedySnake.png" alt="" /></p>

<p>以上已经给出了有关此程序的效果图和流程图，虽然与实际程序稍有差异，但也八九不离十了。
关于此次贪吃蛇的制作，主要还是为了锻炼一下代码能力，也就相当于一个超级大模拟吧。
具体相当于要实现以下功能</p>

<h3 id="游戏实现">游戏实现</h3>
<p>游戏的主体部分，即有关地图的加载，蛇身的移动，游戏结束的判定等等，地图由文件形式存储，可以自己DIY哈</p>
<h3 id="菜单界面">菜单界面</h3>
<p>其实，这个玩意才最难搞，我写了个 Button 类，专门来处理有关这些菜单按钮的界面，然后疯狂调参，把按钮们放在一个合适的位置</p>
<h3 id="分数统计">分数统计</h3>
<p>为永久保存历史记录与排行榜，可以开一个文件，把战绩都保存在里面，然后每次更新文件里的内容即可</p>
<h3 id="操作设置">操作设置</h3>
<p>有的人习惯按转向来操作，即控制蛇的左拐和右拐，有的人习惯直接用上下左右控制蛇的方向，考虑到这一点，我添加了这个设置，并且为了永久保存，依旧将设置的结果保存在文件里面</p>

<h2 id="介绍">介绍</h2>
<p>首先进入的便是主菜单，截图如下</p>

<p>这个时候可以上下键选择，空格或者回车键确认，即可进入相应的选项，先直接开始游戏</p>

<p>选择一个模式，选择的方法同上</p>

<p>注意，游戏时请将输入法切换成英文，同时尽可能使用 WASD 而不是键盘右侧的上下左右，减少一些不明原因带来的延迟现象</p>

<p>同时，空格键还有暂停的功能，再次点击即可继续游戏（本来打算再写个暂停的界面的，但因问没 (bo) 时 (zhu) 间 (lan) ，就放弃了）</p>

<p>然后是游戏结束时的界面，依旧上下键选择，空格回车键确认，此界面与分数统计一起食用效果更佳</p>

<p>历史最佳，即分数统计系统，可用上下键翻页，空格回车键返回上一级</p>

<p>以上就是设置里面两种操作模式的选择，可以根据个人的喜好自行设置，关于那个动画的实现，我比较蠢。。。就直接一个一个字慢慢输出的，中文汉字还真不知道有没有什么好的输出办法。。。</p>

<p>最后打个自己博客的广告，溜咯</p>

<h2 id="高级">高级</h2>
<h3 id="自定义地图">自定义地图</h3>
<p>在 data/mode/ 文件夹下有 4 个地图包，点开之后里面大概长这个样子，然后我们就可以愉快的修改地图啦，注意不要让蛇一开始就撞到墙上，地图的大小也必须是 15×20 的，虽然你也可以直接在源代码里面强行修改地图的大小，但那样的话可能会造成文字显示的位置不对等问题</p>

<p>可以看到，你还可以在里面修改颜色，以及有关蛇的参数，注意蛇身的坐标必须按顺序给出，不然后果会很严重
另外，因为文件读入的识别功能不那么智能，所以请不要随意调整参数的位置与空格的格式。。。</p>

<h2 id="游戏下载">游戏下载</h2>
<p>注意，此下载链接仅供娱乐，内含数据包及可执行程序，解压后无需安装即可开始游戏，但不包含源代码</p>

<h2 id="源代码">源代码</h2>
<p>没写什么注释，只把关于 windows API 里面自己不熟悉的函数写了下注释，大家将就看下</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//Anoxiacxy</span>
<span class="cp">#include &lt;windows.h&gt; 
#include &lt;iostream&gt;
#include &lt;fstream&gt;
#include &lt;cstring&gt;
#include &lt;conio.h&gt;
#include &lt;vector&gt; 
#include &lt;cstdio&gt;
#include &lt;algorithm&gt;
#include &lt;ctime&gt;
#define W 20 
#define H 15 
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="c1">//-----------------------------隐藏光标</span>
<span class="kt">void</span> <span class="nf">HideCursor</span><span class="p">(){</span>
	<span class="n">HANDLE</span> <span class="n">handle</span> <span class="o">=</span> <span class="n">GetStdHandle</span><span class="p">(</span><span class="n">STD_OUTPUT_HANDLE</span><span class="p">);</span>
	<span class="n">CONSOLE_CURSOR_INFO</span> <span class="n">CursorInfo</span><span class="p">;</span>
	<span class="n">GetConsoleCursorInfo</span><span class="p">(</span><span class="n">handle</span><span class="p">,</span><span class="o">&amp;</span><span class="n">CursorInfo</span><span class="p">);</span><span class="c1">//获取控制台光标信息</span>
	<span class="n">CursorInfo</span><span class="p">.</span><span class="n">bVisible</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span><span class="c1">//隐藏控制台光标</span>
	<span class="n">SetConsoleCursorInfo</span><span class="p">(</span><span class="n">handle</span><span class="p">,</span><span class="o">&amp;</span><span class="n">CursorInfo</span><span class="p">);</span><span class="c1">//设置控制台光标状态</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">SetWindowSize</span><span class="p">(</span><span class="kt">int</span> <span class="n">cols</span><span class="p">,</span> <span class="kt">int</span> <span class="n">lines</span><span class="p">);</span>
<span class="kt">void</span> <span class="nf">Goto</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">);</span>
<span class="kt">void</span> <span class="nf">SetColor</span><span class="p">(</span><span class="kt">int</span> <span class="n">colorID</span><span class="p">);</span>
<span class="kt">void</span> <span class="nf">SetWindowSize</span><span class="p">(</span><span class="kt">int</span> <span class="n">cols</span><span class="p">,</span> <span class="kt">int</span> <span class="n">lines</span><span class="p">){</span><span class="c1">//设置窗口大小</span>
    <span class="n">system</span><span class="p">(</span><span class="s">"title GreedySnake"</span><span class="p">);</span><span class="c1">//设置窗口标题</span>
    <span class="kt">char</span> <span class="n">cmd</span><span class="p">[</span><span class="mi">30</span><span class="p">];</span>
    <span class="n">sprintf</span><span class="p">(</span><span class="n">cmd</span><span class="p">,</span> <span class="s">"mode con cols=%d lines=%d"</span><span class="p">,</span> <span class="n">cols</span> <span class="o">*</span> <span class="mi">2</span><span class="p">,</span> <span class="n">lines</span><span class="p">);</span><span class="c1">//一个图形■占两个字符，故宽度乘以2</span>
    <span class="n">system</span><span class="p">(</span><span class="n">cmd</span><span class="p">);</span><span class="c1">//设置窗口宽度和高度</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">Goto</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">){</span><span class="c1">//设置光标位置</span>
    <span class="n">COORD</span> <span class="n">position</span><span class="p">;</span>
    <span class="n">position</span><span class="p">.</span><span class="n">X</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>
    <span class="n">position</span><span class="p">.</span><span class="n">Y</span> <span class="o">=</span> <span class="n">y</span><span class="p">;</span>
    <span class="n">SetConsoleCursorPosition</span><span class="p">(</span><span class="n">GetStdHandle</span><span class="p">(</span><span class="n">STD_OUTPUT_HANDLE</span><span class="p">),</span> <span class="n">position</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">SetColor</span><span class="p">(</span><span class="kt">int</span> <span class="n">colorID</span><span class="p">){</span><span class="c1">//设置文本颜色</span>
    <span class="n">SetConsoleTextAttribute</span><span class="p">(</span><span class="n">GetStdHandle</span><span class="p">(</span><span class="n">STD_OUTPUT_HANDLE</span><span class="p">),</span> <span class="n">colorID</span><span class="p">);</span>
<span class="p">}</span>
<span class="c1">//---------------------------------------------//</span>
<span class="k">const</span> <span class="n">string</span> <span class="n">CLEAR</span><span class="o">=</span><span class="s">"  "</span><span class="p">;</span>
<span class="k">class</span> <span class="nc">Point</span><span class="p">{</span> <span class="c1">// Point类 表示控制台里面的一个坐标 </span>
<span class="nl">private:</span>
	<span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span> 
<span class="nl">public:</span>
	<span class="n">Point</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span> <span class="o">=</span> <span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="n">x</span><span class="p">(</span><span class="n">x</span><span class="p">),</span> <span class="n">y</span><span class="p">(</span><span class="n">y</span><span class="p">){}</span>
	<span class="kt">void</span> <span class="n">Set</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="kt">int</span> <span class="n">y</span><span class="p">);</span> <span class="c1">//将坐标设为-- </span>
	<span class="kt">void</span> <span class="n">Print</span><span class="p">(</span><span class="n">string</span> <span class="n">Object</span><span class="p">);</span> <span class="c1">//在该坐标输出一个字符 </span>
	<span class="kt">void</span> <span class="n">Print</span><span class="p">(</span><span class="n">string</span> <span class="n">Object</span><span class="p">,</span> <span class="kt">int</span> <span class="n">color</span><span class="p">);</span> <span class="c1">//在该坐标输出一个带颜色的字符 </span>
	<span class="kt">void</span> <span class="n">Clear</span><span class="p">();</span> <span class="c1">//清空当前坐标的字符 </span>
	<span class="kt">int</span> <span class="n">Getx</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">x</span><span class="p">;}</span>
	<span class="kt">int</span> <span class="n">Gety</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">y</span><span class="p">;}</span>
	<span class="kt">bool</span> <span class="k">operator</span> <span class="o">==</span> <span class="p">(</span><span class="k">const</span> <span class="n">Point</span><span class="o">&amp;</span> <span class="n">point</span><span class="p">)</span>
		<span class="p">{</span><span class="k">return</span> <span class="n">point</span><span class="p">.</span><span class="n">x</span> <span class="o">==</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">x</span> <span class="o">&amp;&amp;</span> <span class="n">point</span><span class="p">.</span><span class="n">y</span> <span class="o">==</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">y</span><span class="p">;}</span>
<span class="p">};</span>
<span class="kt">void</span> <span class="n">Point</span><span class="o">::</span><span class="n">Print</span><span class="p">(</span><span class="n">string</span> <span class="n">Object</span><span class="p">,</span> <span class="kt">int</span> <span class="n">color</span><span class="p">){</span>
	<span class="n">SetColor</span><span class="p">(</span><span class="n">color</span><span class="p">);</span>
	<span class="n">Goto</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Object</span><span class="p">;</span>
<span class="p">}</span> 
<span class="kt">void</span> <span class="n">Point</span><span class="o">::</span><span class="n">Print</span><span class="p">(</span><span class="n">string</span> <span class="n">Object</span><span class="p">){</span>
	<span class="n">Goto</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">Object</span><span class="p">;</span>
<span class="p">}</span> 
<span class="kt">void</span> <span class="n">Point</span><span class="o">::</span><span class="n">Clear</span><span class="p">(){</span>
	<span class="n">Point</span><span class="o">::</span><span class="n">Print</span><span class="p">(</span><span class="n">CLEAR</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="n">Point</span><span class="o">::</span><span class="n">Set</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">){</span>
	<span class="k">this</span><span class="o">-&gt;</span><span class="n">x</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>
	<span class="k">this</span><span class="o">-&gt;</span><span class="n">y</span> <span class="o">=</span> <span class="n">y</span><span class="p">;</span>
<span class="p">}</span>
<span class="c1">//---------------------------------------------//</span>
<span class="cp">#define STARTGAME 0
#define RANKING 1
#define SETTING 2
#define ABOUT 3
#define EXIT 4
#define MAINMENU_TOT 5
</span>
<span class="cp">#define EASY 0
#define NORMAL 1
#define HARD 2
#define UNBELIEVABLE 3
#define MODEMENU_TOT 4
</span>
<span class="cp">#define PLAY_AGAIN 0
#define SHOW_RANK 1
#define BACK_TO_MODEMENU 2
#define BACK_TO_MAINMENU 3
#define GAMEOVERMENU_TOT 4
</span><span class="k">class</span> <span class="nc">Button</span><span class="p">{</span>
<span class="nl">public:</span>
	<span class="n">Button</span><span class="p">(){}</span>
	<span class="kt">void</span> <span class="n">Set</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">,</span> <span class="n">Point</span> <span class="n">p</span><span class="p">,</span> <span class="kt">int</span> <span class="n">c1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">c2</span><span class="p">);</span>	<span class="c1">//设置当前按钮显示字符，位置，未选中时颜色，选中时颜色 </span>
	<span class="kt">void</span> <span class="n">Print</span><span class="p">();</span> 	<span class="c1">//输出 </span>
	<span class="kt">bool</span> <span class="n">slect</span><span class="p">;</span> 	<span class="c1">//是否选中 </span>
	<span class="n">Point</span> <span class="n">pos</span><span class="p">;</span>		 
<span class="nl">private:</span>
	<span class="n">string</span> <span class="n">discribe</span><span class="p">;</span>
	<span class="kt">int</span> <span class="n">color</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
	<span class="c1">//0---unslected 1---slected </span>
<span class="p">};</span>
<span class="kt">void</span> <span class="n">Button</span><span class="o">::</span><span class="n">Set</span><span class="p">(</span><span class="n">string</span> <span class="n">s</span><span class="p">,</span> <span class="n">Point</span> <span class="n">p</span><span class="p">,</span> <span class="kt">int</span> <span class="n">c1</span><span class="p">,</span> <span class="kt">int</span> <span class="n">c2</span><span class="p">){</span>
	<span class="n">discribe</span> <span class="o">=</span> <span class="n">s</span><span class="p">;</span>
	<span class="n">pos</span> <span class="o">=</span> <span class="n">p</span><span class="p">;</span>
	<span class="n">color</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">c1</span><span class="p">;</span>
	<span class="n">color</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">c2</span><span class="p">;</span> 
	<span class="n">slect</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="n">Button</span><span class="o">::</span><span class="n">Print</span><span class="p">(){</span>
	<span class="n">SetColor</span><span class="p">(</span><span class="n">color</span><span class="p">[</span><span class="n">slect</span><span class="p">]);</span>
	<span class="n">Goto</span><span class="p">(</span><span class="n">pos</span><span class="p">.</span><span class="n">Getx</span><span class="p">(),</span> <span class="n">pos</span><span class="p">.</span><span class="n">Gety</span><span class="p">());</span>
	<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">discribe</span><span class="p">;</span>
<span class="p">}</span>

<span class="c1">//---------------------------------------------//</span>

<span class="cp">#define EMPTY 0
#define WALL 1
#define SNAKE 2
#define FOOD 3
#define ELEMENT_TOT 4
#define ABOUT_TOT 4
</span><span class="kt">void</span> <span class="nf">Initializatoin</span><span class="p">();</span><span class="c1">//初始化，读入数据 </span>

<span class="n">string</span> <span class="n">element</span><span class="p">[</span><span class="n">ELEMENT_TOT</span><span class="p">];</span><span class="c1">//元素符号 </span>
<span class="n">Button</span> <span class="n">about_button</span><span class="p">[</span><span class="n">ABOUT_TOT</span><span class="p">];</span>

<span class="kt">int</span> <span class="nf">MainMenu</span><span class="p">();</span>	<span class="c1">//主菜单--返回选项 </span>
<span class="kt">int</span> <span class="nf">ModeMenu</span><span class="p">();</span>	<span class="c1">//模式选择--返回选项 </span>
<span class="kt">int</span> <span class="nf">GameOverMenu</span><span class="p">(</span><span class="kt">int</span><span class="p">);</span> <span class="c1">//游戏结束--传入得分--返回选项 </span>
<span class="kt">int</span> <span class="nf">SetMenu</span><span class="p">();</span> 	<span class="c1">//操作设置--返回选项 </span>
<span class="kt">int</span> <span class="n">mp</span><span class="p">[</span><span class="n">W</span><span class="p">][</span><span class="n">H</span><span class="p">];</span> 	<span class="c1">//地图 </span>
<span class="kt">int</span> <span class="n">empty_num</span><span class="p">;</span>	<span class="c1">//地图中空位的个数 </span>
<span class="kt">void</span> <span class="nf">NewFood</span><span class="p">(</span><span class="kt">int</span> <span class="n">color</span><span class="p">){</span> <span class="c1">//在地图的剩余空位中随机生成一个食物 </span>
	<span class="n">srand</span><span class="p">(</span><span class="n">time</span><span class="p">(</span><span class="nb">NULL</span><span class="p">));</span>
	<span class="kt">int</span> <span class="n">pos</span> <span class="o">=</span> <span class="n">rand</span><span class="p">()</span> <span class="o">%</span> <span class="n">empty_num</span> <span class="o">+</span> <span class="mi">1</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">H</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">W</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
			<span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">EMPTY</span><span class="p">)</span> <span class="n">pos</span><span class="o">--</span><span class="p">;</span>
			<span class="k">if</span><span class="p">(</span><span class="n">pos</span> <span class="o">==</span> <span class="mi">0</span> <span class="o">&amp;&amp;</span> <span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">EMPTY</span><span class="p">){</span>
				<span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">=</span> <span class="n">FOOD</span><span class="p">;</span>
				<span class="n">Point</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">).</span><span class="n">Print</span><span class="p">(</span><span class="n">element</span><span class="p">[</span><span class="n">FOOD</span><span class="p">],</span> <span class="n">color</span><span class="p">);</span>
				<span class="n">empty_num</span><span class="o">--</span><span class="p">;</span>
				<span class="k">return</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>	
<span class="p">}</span>
<span class="k">struct</span> <span class="nc">Snake</span><span class="p">{</span>	 
	<span class="n">Point</span> <span class="n">body</span><span class="p">[</span><span class="n">W</span> <span class="o">*</span> <span class="n">H</span><span class="p">];</span> <span class="c1">//身体--由一个个点组成 </span>
	<span class="kt">int</span> <span class="n">head</span><span class="p">,</span> <span class="n">tail</span><span class="p">;</span>	<span class="c1">//头-尾 </span>
	<span class="kt">int</span> <span class="n">speed</span><span class="p">;</span>		<span class="c1">//速度 </span>
	<span class="kt">int</span> <span class="n">dicx</span><span class="p">,</span> <span class="n">dicy</span><span class="p">;</span> <span class="c1">//方向 </span>
	<span class="kt">int</span> <span class="n">color</span><span class="p">;</span>
	<span class="n">Snake</span><span class="p">(){}</span>
	<span class="kt">void</span> <span class="n">Set</span><span class="p">(</span><span class="n">Point</span> <span class="n">snk</span><span class="p">[],</span> <span class="kt">int</span> <span class="n">len</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_color</span><span class="p">,</span> <span class="kt">int</span> <span class="n">_speed</span><span class="p">,</span> <span class="kt">int</span> <span class="n">x</span><span class="p">,</span> <span class="kt">int</span> <span class="n">y</span><span class="p">)</span> <span class="p">{</span>	<span class="c1">//一个初始化函数 </span>
		<span class="n">head</span> <span class="o">=</span> <span class="n">len</span><span class="p">;</span> <span class="n">tail</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
		<span class="n">color</span> <span class="o">=</span> <span class="n">_color</span><span class="p">;</span>
		<span class="n">speed</span> <span class="o">=</span> <span class="n">_speed</span><span class="p">;</span>
		<span class="n">dicx</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span> <span class="n">dicy</span> <span class="o">=</span> <span class="n">y</span><span class="p">;</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">len</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
			<span class="n">body</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">snk</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
			<span class="n">body</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Print</span><span class="p">(</span><span class="n">element</span><span class="p">[</span><span class="n">SNAKE</span><span class="p">],</span> <span class="n">color</span><span class="p">);</span>
			<span class="n">mp</span><span class="p">[</span><span class="n">body</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Getx</span><span class="p">()][</span><span class="n">body</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Gety</span><span class="p">()]</span> <span class="o">=</span> <span class="n">SNAKE</span><span class="p">;</span>	
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="kt">int</span> <span class="n">move</span><span class="p">()</span> <span class="p">{</span> <span class="c1">//控制蛇向当前方向移动一格--返回蛇头遇到的物品 </span>
		<span class="kt">int</span> <span class="n">hx</span> <span class="o">=</span> <span class="n">body</span><span class="p">[</span><span class="n">head</span><span class="p">].</span><span class="n">Getx</span><span class="p">()</span> <span class="o">+</span> <span class="n">dicx</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">hy</span> <span class="o">=</span> <span class="n">body</span><span class="p">[</span><span class="n">head</span><span class="p">].</span><span class="n">Gety</span><span class="p">()</span> <span class="o">+</span> <span class="n">dicy</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">tmp</span> <span class="o">=</span> <span class="n">mp</span><span class="p">[</span><span class="n">hx</span><span class="p">][</span><span class="n">hy</span><span class="p">];</span>
		<span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">hx</span><span class="p">][</span><span class="n">hy</span><span class="p">]</span> <span class="o">==</span> <span class="n">WALL</span> <span class="o">||</span> <span class="n">mp</span><span class="p">[</span><span class="n">hx</span><span class="p">][</span><span class="n">hy</span><span class="p">]</span> <span class="o">==</span> <span class="n">SNAKE</span><span class="p">)</span> <span class="k">return</span> <span class="n">tmp</span><span class="p">;</span>
		<span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">hx</span><span class="p">][</span><span class="n">hy</span><span class="p">]</span> <span class="o">!=</span> <span class="n">FOOD</span><span class="p">){</span>
			<span class="kt">int</span> <span class="n">tx</span> <span class="o">=</span> <span class="n">body</span><span class="p">[</span><span class="n">tail</span><span class="p">].</span><span class="n">Getx</span><span class="p">();</span>
			<span class="kt">int</span> <span class="n">ty</span> <span class="o">=</span> <span class="n">body</span><span class="p">[</span><span class="n">tail</span><span class="p">].</span><span class="n">Gety</span><span class="p">();</span>
			<span class="n">body</span><span class="p">[</span><span class="n">tail</span><span class="p">].</span><span class="n">Clear</span><span class="p">();</span>
			<span class="n">mp</span><span class="p">[</span><span class="n">tx</span><span class="p">][</span><span class="n">ty</span><span class="p">]</span> <span class="o">=</span> <span class="n">EMPTY</span><span class="p">;</span>
			<span class="n">tail</span> <span class="o">=</span> <span class="p">(</span><span class="n">tail</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="p">(</span><span class="n">W</span> <span class="o">*</span> <span class="n">H</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="n">mp</span><span class="p">[</span><span class="n">hx</span><span class="p">][</span><span class="n">hy</span><span class="p">]</span> <span class="o">=</span> <span class="n">SNAKE</span><span class="p">;</span>
		<span class="n">head</span> <span class="o">=</span> <span class="p">(</span><span class="n">head</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="p">(</span><span class="n">W</span> <span class="o">*</span> <span class="n">H</span><span class="p">);</span>
		<span class="n">body</span><span class="p">[</span><span class="n">head</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">hx</span><span class="p">,</span> <span class="n">hy</span><span class="p">);</span>
		<span class="n">body</span><span class="p">[</span><span class="n">head</span><span class="p">].</span><span class="n">Print</span><span class="p">(</span><span class="n">element</span><span class="p">[</span><span class="n">SNAKE</span><span class="p">],</span> <span class="n">color</span><span class="p">);</span>
		<span class="k">return</span> <span class="n">tmp</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="kt">void</span> <span class="n">turn_left</span><span class="p">()</span> <span class="p">{</span>	<span class="c1">//左转 </span>
		<span class="n">dicx</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span> 
		<span class="n">swap</span><span class="p">(</span><span class="n">dicx</span><span class="p">,</span> <span class="n">dicy</span><span class="p">);</span>
	<span class="p">}</span> 
	<span class="kt">void</span> <span class="n">turn_right</span><span class="p">()</span> <span class="p">{</span>	<span class="c1">//右转 </span>
		<span class="n">dicy</span> <span class="o">*=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
		<span class="n">swap</span><span class="p">(</span><span class="n">dicx</span><span class="p">,</span> <span class="n">dicy</span><span class="p">);</span>
	<span class="p">}</span>
<span class="p">};</span>
<span class="cp">#define OPT_L_R 0 	//ad左右拐弯
#define OPT_U_D_L_R 1//直接转向xx 
#define OPT_TOT 2
#define DISCRIBE_LEN 100 //选项描述的最大长度（其实用不着这么多） 
</span>
<span class="kt">int</span> <span class="n">set_opt</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span>

<span class="kt">void</span> <span class="nf">DealOpt</span><span class="p">(</span><span class="kt">char</span> <span class="n">press</span><span class="p">,</span> <span class="n">Snake</span><span class="o">&amp;</span> <span class="n">snake</span><span class="p">){</span>	<span class="c1">//处理游戏时的按键操作，强烈建议仅使用 WASD </span>
	<span class="k">if</span><span class="p">(</span><span class="n">press</span> <span class="o">==</span> <span class="sc">' '</span><span class="p">)</span><span class="k">while</span><span class="p">(</span><span class="n">getch</span><span class="p">()</span> <span class="o">!=</span> <span class="sc">' '</span><span class="p">);</span>
	<span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">set_opt</span> <span class="o">==</span> <span class="n">OPT_L_R</span><span class="p">)</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">press</span><span class="p">){</span>
			<span class="k">case</span> <span class="mi">75</span><span class="p">:</span><span class="c1">//left</span>
			<span class="k">case</span> <span class="sc">'A'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'a'</span><span class="p">:</span>
				<span class="n">snake</span><span class="p">.</span><span class="n">turn_left</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="mi">77</span><span class="p">:</span><span class="c1">//right</span>
			<span class="k">case</span> <span class="sc">'D'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'d'</span><span class="p">:</span>
				<span class="n">snake</span><span class="p">.</span><span class="n">turn_right</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
			<span class="nl">default:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">set_opt</span> <span class="o">==</span> <span class="n">OPT_U_D_L_R</span><span class="p">)</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">press</span><span class="p">){</span>
			<span class="k">case</span> <span class="sc">'A'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'a'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">75</span> <span class="p">:</span>
				<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicx</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
					<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicy</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_right</span><span class="p">();</span>
					<span class="k">else</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_left</span><span class="p">();</span>
				<span class="p">}</span><span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'D'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'d'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">77</span> <span class="p">:</span>
				<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicx</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
					<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicy</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_right</span><span class="p">();</span>
					<span class="k">else</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_left</span><span class="p">();</span>
				<span class="p">}</span><span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'W'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'w'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">72</span> <span class="p">:</span>
				<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicy</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
					<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicx</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_right</span><span class="p">();</span>
					<span class="k">else</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_left</span><span class="p">();</span>
				<span class="p">}</span><span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'S'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'s'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">80</span> <span class="p">:</span>
				<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicy</span> <span class="o">==</span> <span class="mi">0</span><span class="p">){</span>
					<span class="k">if</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">dicx</span> <span class="o">==</span> <span class="mi">1</span><span class="p">)</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_right</span><span class="p">();</span>
					<span class="k">else</span> <span class="n">snake</span><span class="p">.</span><span class="n">turn_left</span><span class="p">();</span>
				<span class="p">}</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">Play</span><span class="p">(</span><span class="kt">int</span> <span class="n">Mode</span><span class="p">){</span>	<span class="c1">//游戏的过程 </span>
	<span class="n">ifstream</span> <span class="n">fin</span><span class="p">;</span> <span class="n">string</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="k">switch</span><span class="p">(</span><span class="n">Mode</span><span class="p">){</span>			<span class="c1">//打开选择的模式地图 </span>
		<span class="k">case</span> <span class="n">EASY</span><span class="p">:</span> 			<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//mode//easy.mode"</span><span class="p">);</span>			<span class="k">break</span><span class="p">;</span>
		<span class="k">case</span> <span class="n">NORMAL</span><span class="p">:</span> 		<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//mode//normal.mode"</span><span class="p">);</span>		<span class="k">break</span><span class="p">;</span>
		<span class="k">case</span> <span class="n">HARD</span><span class="p">:</span>			<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//mode//hard.mode"</span><span class="p">);</span>			<span class="k">break</span><span class="p">;</span>
		<span class="k">case</span> <span class="n">UNBELIEVABLE</span><span class="p">:</span>	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//mode//unbelievable.mode"</span><span class="p">);</span>	<span class="k">break</span><span class="p">;</span>
		<span class="nl">default:</span><span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
	<span class="p">}</span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">empty_num</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span>	<span class="c1">//载入地图 </span>
	<span class="kt">int</span> <span class="n">wall_color</span><span class="p">,</span> <span class="n">snake_color</span><span class="p">,</span> <span class="n">food_color</span><span class="p">;</span>
	<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">wall_color</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">snake_color</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">food_color</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">H</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">W</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">];</span>
			<span class="k">if</span><span class="p">(</span><span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span> <span class="o">==</span> <span class="n">EMPTY</span><span class="p">)</span> <span class="n">empty_num</span><span class="o">++</span><span class="p">;</span>
			<span class="n">Point</span><span class="p">(</span><span class="n">i</span><span class="p">,</span> <span class="n">j</span><span class="p">).</span><span class="n">Print</span><span class="p">(</span><span class="n">element</span><span class="p">[</span><span class="n">mp</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]],</span> <span class="n">wall_color</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="kt">int</span> <span class="n">len</span><span class="p">;</span>
	<span class="n">Point</span> <span class="n">tmp</span><span class="p">[</span><span class="n">W</span><span class="o">*</span><span class="n">H</span><span class="p">];</span>
	<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">len</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">len</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">empty_num</span><span class="o">--</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">x</span><span class="p">,</span><span class="n">y</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">x</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">y</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">tmp</span><span class="p">[</span><span class="n">i</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="kt">int</span> <span class="n">dicx</span><span class="p">,</span> <span class="n">dicy</span><span class="p">,</span> <span class="n">speed</span><span class="p">;</span>
	<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">dicx</span> <span class="o">&gt;&gt;</span> <span class="n">dicy</span><span class="p">;</span>
	<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">speed</span><span class="p">;</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="n">Snake</span> <span class="n">snake</span><span class="p">;</span>
	<span class="n">snake</span><span class="p">.</span><span class="n">Set</span><span class="p">(</span><span class="n">tmp</span><span class="p">,</span> <span class="n">len</span><span class="p">,</span> <span class="n">snake_color</span><span class="p">,</span> <span class="n">speed</span><span class="p">,</span> <span class="n">dicx</span><span class="p">,</span> <span class="n">dicy</span><span class="p">);</span>
	<span class="n">NewFood</span><span class="p">(</span><span class="n">food_color</span><span class="p">);</span>
	<span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
	<span class="kt">bool</span> <span class="n">live</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
	<span class="k">while</span><span class="p">(</span><span class="n">live</span><span class="p">)</span> <span class="p">{</span>	<span class="c1">//游戏循环--当蛇活着时 </span>
		<span class="k">if</span><span class="p">(</span><span class="n">kbhit</span><span class="p">())</span> <span class="p">{</span>
			<span class="kt">char</span> <span class="n">press</span><span class="o">=</span><span class="n">getch</span><span class="p">();</span>
			<span class="n">DealOpt</span><span class="p">(</span><span class="n">press</span><span class="p">,</span> <span class="n">snake</span><span class="p">);</span>
		<span class="p">}</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">snake</span><span class="p">.</span><span class="n">move</span><span class="p">()){</span>
			<span class="k">case</span> <span class="n">SNAKE</span><span class="p">:</span>
			<span class="k">case</span> <span class="n">WALL</span><span class="p">:</span>  <span class="n">live</span><span class="o">=</span><span class="nb">false</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="n">FOOD</span><span class="p">:</span>  <span class="n">NewFood</span><span class="p">(</span><span class="n">food_color</span><span class="p">);</span>
						<span class="n">score</span><span class="o">++</span><span class="p">;</span>
						<span class="k">break</span><span class="p">;</span>
			<span class="nl">default:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">Sleep</span><span class="p">(</span><span class="mi">1000</span> <span class="o">/</span> <span class="n">snake</span><span class="p">.</span><span class="n">speed</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">score</span><span class="p">;</span>
<span class="p">}</span>
<span class="cp">#define SHOW_NUM 5
#define SPEED 30 
</span><span class="kt">int</span> <span class="n">best_score</span><span class="p">[</span><span class="mi">10086</span><span class="p">];</span>
<span class="kt">void</span> <span class="nf">UpdataScore</span><span class="p">(</span><span class="kt">int</span> <span class="n">score</span><span class="p">){</span>	<span class="c1">//游戏结束后更新分数，并及时记录在文件中 </span>
	<span class="n">best_score</span><span class="p">[</span><span class="o">++</span><span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">]]</span> <span class="o">=</span> <span class="n">score</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">k</span> <span class="o">=</span> <span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="n">best_score</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">best_score</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span> <span class="o">&amp;&amp;</span> <span class="n">k</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">;</span> <span class="n">k</span><span class="o">--</span><span class="p">)</span>
		<span class="n">swap</span><span class="p">(</span><span class="n">best_score</span><span class="p">[</span><span class="n">k</span><span class="p">],</span> <span class="n">best_score</span><span class="p">[</span><span class="n">k</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span>
	<span class="k">while</span><span class="p">(</span><span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">&gt;</span> <span class="mi">10000</span><span class="p">)</span> <span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">--</span><span class="p">;</span>
	<span class="n">ofstream</span> <span class="n">fout</span><span class="p">;</span>
	<span class="n">fout</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//best.score"</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
		<span class="n">fout</span> <span class="o">&lt;&lt;</span> <span class="n">best_score</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
	<span class="n">fout</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">ShowScore</span><span class="p">(</span><span class="kt">int</span> <span class="n">now</span><span class="p">){</span>	<span class="c1">//打印当前页的分数 </span>
	<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">SHOW_NUM</span> <span class="o">&amp;&amp;</span> <span class="p">(</span><span class="n">now</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">SHOW_NUM</span> <span class="o">+</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">Goto</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span> <span class="o">|</span> <span class="mi">1</span><span class="p">);</span> <span class="n">Sleep</span><span class="p">(</span><span class="n">SPEED</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"%d"</span><span class="p">,(</span><span class="n">now</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">SHOW_NUM</span> <span class="o">+</span> <span class="n">i</span><span class="p">);</span>
		<span class="n">Goto</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="n">i</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span> <span class="o">|</span> <span class="mi">1</span><span class="p">);</span>
		<span class="n">printf</span><span class="p">(</span><span class="s">"%4d"</span><span class="p">,</span> <span class="n">best_score</span><span class="p">[(</span><span class="n">now</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="n">SHOW_NUM</span> <span class="o">+</span> <span class="n">i</span><span class="p">]);</span>
	<span class="p">}</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">Setting</span><span class="p">()</span> <span class="p">{</span>	<span class="c1">//就是操作的设置啦--同样及时记录 </span>
	<span class="n">set_opt</span> <span class="o">=</span> <span class="n">SetMenu</span><span class="p">();</span>
	<span class="n">ofstream</span> <span class="n">fout</span><span class="p">;</span>
	<span class="n">fout</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//others//setting.txt"</span><span class="p">);</span>
	<span class="n">fout</span> <span class="o">&lt;&lt;</span> <span class="n">set_opt</span> <span class="o">&lt;&lt;</span> <span class="n">endl</span><span class="p">;</span>
	<span class="n">fout</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">Ranking</span><span class="p">(){</span>	<span class="c1">//此函数可以实现分数的翻页功能</span>
	 <span class="kt">int</span> <span class="n">cnt</span> <span class="o">=</span> <span class="p">(</span><span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">SHOW_NUM</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">/</span> <span class="n">SHOW_NUM</span><span class="p">;</span>
	 <span class="kt">int</span> <span class="n">now</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
	 <span class="n">ShowScore</span><span class="p">(</span><span class="n">now</span><span class="p">);</span>
	 <span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
	 	<span class="kt">bool</span> <span class="n">turn_out</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
	 	<span class="k">switch</span><span class="p">(</span><span class="n">getch</span><span class="p">()){</span>
			<span class="k">case</span> <span class="sc">'w'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">72</span> <span class="p">:</span><span class="c1">//up</span>
				<span class="k">if</span><span class="p">(</span><span class="n">now</span> <span class="o">!=</span> <span class="mi">1</span><span class="p">){</span>
					<span class="n">now</span><span class="o">--</span><span class="p">;</span>
					<span class="n">ShowScore</span><span class="p">(</span><span class="n">now</span><span class="p">);</span>
				<span class="p">}</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'s'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">80</span> <span class="p">:</span><span class="c1">//down</span>
				<span class="k">if</span><span class="p">(</span><span class="n">now</span> <span class="o">&lt;</span> <span class="n">cnt</span><span class="p">){</span>
					<span class="n">now</span><span class="o">++</span><span class="p">;</span>
					<span class="n">ShowScore</span><span class="p">(</span><span class="n">now</span><span class="p">);</span>
				<span class="p">}</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">' '</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">13</span> <span class="p">:</span><span class="c1">//enter</span>
				<span class="n">turn_out</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
			<span class="nl">default:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="k">if</span><span class="p">(</span><span class="n">turn_out</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>
	<span class="p">}</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">StartGame</span><span class="p">(){</span>	<span class="c1">//开始游戏的选项 </span>
	<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="kt">int</span> <span class="n">mode</span> <span class="o">=</span> <span class="n">ModeMenu</span><span class="p">();</span>  
		<span class="kt">bool</span> <span class="n">changemode</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
			<span class="kt">int</span> <span class="n">score</span> <span class="o">=</span> <span class="n">Play</span><span class="p">(</span><span class="n">mode</span><span class="p">);</span>
			<span class="n">UpdataScore</span><span class="p">(</span><span class="n">score</span><span class="p">);</span>
			<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
				<span class="kt">bool</span> <span class="n">turn_out</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="k">switch</span><span class="p">(</span><span class="n">GameOverMenu</span><span class="p">(</span><span class="n">score</span><span class="p">)){</span>
					<span class="k">case</span> <span class="n">PLAY_AGAIN</span><span class="p">:</span>		<span class="n">turn_out</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>
					<span class="k">case</span> <span class="n">SHOW_RANK</span><span class="p">:</span>			<span class="n">Ranking</span><span class="p">();</span> <span class="k">break</span><span class="p">;</span>
					<span class="k">case</span> <span class="n">BACK_TO_MAINMENU</span><span class="p">:</span>	<span class="k">return</span><span class="p">;</span>
					<span class="k">case</span> <span class="n">BACK_TO_MODEMENU</span><span class="p">:</span>	<span class="n">turn_out</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span> 
											<span class="n">changemode</span><span class="o">=</span><span class="nb">true</span><span class="p">;</span> <span class="k">break</span><span class="p">;</span>		
				<span class="p">}</span>
				<span class="k">if</span><span class="p">(</span><span class="n">turn_out</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>
			<span class="p">}</span>
			<span class="k">if</span><span class="p">(</span><span class="n">changemode</span> <span class="o">==</span> <span class="nb">true</span><span class="p">)</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">About</span><span class="p">()</span> <span class="p">{</span>	<span class="c1">//关于页面--只能在源代码里面修改 不属于外面的data文件 </span>
	<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">ABOUT_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">)</span> 
		<span class="n">about_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">getch</span><span class="p">()){</span>
			<span class="k">case</span> <span class="sc">' '</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">13</span> <span class="p">:</span><span class="c1">//enter</span>
				<span class="k">return</span><span class="p">;</span>
			<span class="k">default</span> <span class="o">:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span> 
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="n">SetWindowSize</span><span class="p">(</span><span class="n">W</span><span class="p">,</span> <span class="n">H</span><span class="p">);</span>	<span class="c1">//设置窗口大小 </span>
	<span class="n">HideCursor</span><span class="p">();</span>			<span class="c1">//隐藏光标 </span>
	<span class="c1">//StartAnimation();		//开始动画--这个也懒得写了 </span>
	<span class="n">Initializatoin</span><span class="p">();</span>		<span class="c1">//初始化 </span>
	<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">MainMenu</span><span class="p">()){</span>
			<span class="k">case</span> <span class="n">STARTGAME</span><span class="p">:</span>	<span class="n">StartGame</span><span class="p">();</span><span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="n">RANKING</span><span class="p">:</span>	<span class="n">Ranking</span><span class="p">();</span><span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="n">SETTING</span><span class="p">:</span>	<span class="n">Setting</span><span class="p">();</span><span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="n">ABOUT</span><span class="p">:</span>		<span class="n">About</span><span class="p">();</span><span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="n">EXIT</span><span class="p">:</span>		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
			<span class="nl">default:</span> 		<span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="kt">void</span> <span class="nf">Initializatoin</span><span class="p">(){</span>	<span class="c1">//初始化--读入一大堆文件之类的 </span>
	<span class="n">ifstream</span> <span class="n">fin</span><span class="p">;</span> <span class="n">string</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//others//element.txt"</span><span class="p">);</span><span class="c1">//读入元素符号</span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">element</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="s">"  "</span><span class="p">;</span>  
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">WALL</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">ELEMENT_TOT</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> 
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">element</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//best.score"</span><span class="p">);</span>	<span class="c1">//读入历史分数 </span>
	
	<span class="k">if</span><span class="p">(</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">best_score</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
			<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">best_score</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
	<span class="p">}</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//others//setting.txt"</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">set_opt</span><span class="p">;</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	
	<span class="n">string</span> <span class="n">s</span><span class="p">;</span> <span class="kt">int</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">,</span> <span class="n">xpos</span><span class="p">,</span> <span class="n">ypos</span><span class="p">;</span>	<span class="c1">//防伪--广告 </span>
	<span class="n">s</span> <span class="o">=</span> <span class="s">"code by"</span><span class="p">;</span> <span class="n">c1</span> <span class="o">=</span> <span class="n">c2</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span> <span class="n">xpos</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="n">ypos</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
	<span class="n">about_button</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
	<span class="n">s</span> <span class="o">=</span> <span class="s">"anoxiacxy"</span><span class="p">;</span> <span class="n">c1</span> <span class="o">=</span> <span class="n">c2</span> <span class="o">=</span> <span class="mi">15</span><span class="p">;</span> <span class="n">xpos</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span> <span class="n">ypos</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
	<span class="n">about_button</span><span class="p">[</span><span class="mi">1</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
	<span class="n">s</span> <span class="o">=</span> <span class="s">"anoxiacxy.github.io"</span><span class="p">;</span> <span class="n">c1</span> <span class="o">=</span> <span class="n">c2</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span> <span class="n">xpos</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="n">ypos</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
	<span class="n">about_button</span><span class="p">[</span><span class="mi">2</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">MainMenu</span><span class="p">(){</span>
	<span class="n">Button</span> <span class="n">main_button</span><span class="p">[</span><span class="n">MAINMENU_TOT</span><span class="p">];</span><span class="c1">//主菜单按钮 </span>
	<span class="n">ifstream</span> <span class="n">fin</span><span class="p">;</span> <span class="n">string</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//button//mainmenu.button"</span><span class="p">);</span><span class="c1">//载入 </span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">STARTGAME</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">MAINMENU_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">string</span> <span class="n">s</span><span class="p">;</span> <span class="kt">int</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">,</span> <span class="n">xpos</span><span class="p">,</span> <span class="n">ypos</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">xpos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">ypos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">c1</span> <span class="o">&gt;&gt;</span> <span class="n">c2</span><span class="p">;</span>
		<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">STARTGAME</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">MAINMENU_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="p">}</span> 
	<span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">STARTGAME</span><span class="p">;</span>
	<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
	<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">getch</span><span class="p">()){</span>
			<span class="k">case</span> <span class="sc">'W'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'w'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">72</span><span class="p">:</span><span class="c1">//up</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="n">slect</span> <span class="o">=</span> <span class="p">(</span><span class="n">slect</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">MAINMENU_TOT</span><span class="p">)</span> <span class="o">%</span> <span class="n">MAINMENU_TOT</span><span class="p">;</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'S'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'s'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">80</span><span class="p">:</span><span class="c1">//down</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="n">slect</span><span class="o">=</span><span class="p">(</span><span class="n">slect</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="n">MAINMENU_TOT</span><span class="p">;</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">main_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">' '</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">13</span><span class="p">:</span><span class="c1">//enter</span>
				<span class="k">return</span> <span class="n">slect</span><span class="p">;</span>
			<span class="nl">default:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">ModeMenu</span><span class="p">(){</span>
	<span class="n">Button</span> <span class="n">mode_button</span><span class="p">[</span><span class="n">MODEMENU_TOT</span><span class="p">];</span><span class="c1">//模式选择按钮 </span>
	<span class="n">ifstream</span> <span class="n">fin</span><span class="p">;</span> <span class="n">string</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//button//modemenu.button"</span><span class="p">);</span><span class="c1">//载入  </span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span><span class="o">=</span><span class="n">EASY</span><span class="p">;</span><span class="n">slect</span><span class="o">&lt;</span><span class="n">MODEMENU_TOT</span><span class="p">;</span><span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">string</span> <span class="n">s</span><span class="p">;</span><span class="kt">int</span> <span class="n">c1</span><span class="p">,</span><span class="n">c2</span><span class="p">,</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">xpos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">ypos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">c1</span> <span class="o">&gt;&gt;</span> <span class="n">c2</span><span class="p">;</span>
		<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">EASY</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">MODEMENU_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">EASY</span><span class="p">;</span>
	<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
	<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">getch</span><span class="p">()){</span>
			<span class="k">case</span> <span class="sc">'W'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'w'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">72</span><span class="p">:</span><span class="c1">//up</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="n">slect</span><span class="o">=</span><span class="p">(</span><span class="n">slect</span><span class="o">-</span><span class="mi">1</span><span class="o">+</span><span class="n">MODEMENU_TOT</span><span class="p">)</span><span class="o">%</span><span class="n">MODEMENU_TOT</span><span class="p">;</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'S'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'s'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">80</span><span class="p">:</span><span class="c1">//down</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="n">slect</span><span class="o">=</span><span class="p">(</span><span class="n">slect</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="n">MODEMENU_TOT</span><span class="p">;</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">mode_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">' '</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">13</span><span class="p">:</span><span class="c1">//enter</span>
				<span class="k">return</span> <span class="n">slect</span><span class="p">;</span>
			<span class="nl">default:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>	
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">GameOverMenu</span><span class="p">(</span><span class="kt">int</span> <span class="n">score</span><span class="p">){</span>
	<span class="n">Button</span> <span class="n">gameover_button</span><span class="p">[</span><span class="n">GAMEOVERMENU_TOT</span><span class="p">];</span>	<span class="c1">//游戏结束的按钮 </span>
	<span class="n">ifstream</span> <span class="n">fin</span><span class="p">;</span> <span class="n">string</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//button//gameovermenu.button"</span><span class="p">);</span><span class="c1">//载入 </span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">PLAY_AGAIN</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">GAMEOVERMENU_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">string</span> <span class="n">s</span><span class="p">;</span><span class="kt">int</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">,</span> <span class="n">xpos</span><span class="p">,</span> <span class="n">ypos</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">xpos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">ypos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">c1</span> <span class="o">&gt;&gt;</span> <span class="n">c2</span><span class="p">;</span>
		<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>	
	<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
	<span class="n">SetColor</span><span class="p">(</span><span class="mi">15</span><span class="p">);</span>
	<span class="n">Goto</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">3</span><span class="p">);</span> <span class="n">printf</span><span class="p">(</span><span class="s">"分数%4d"</span><span class="p">,</span> <span class="n">score</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">PLAY_AGAIN</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">GAMEOVERMENU_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">PLAY_AGAIN</span><span class="p">;</span>
	<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
	<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">getch</span><span class="p">()){</span>
			<span class="k">case</span> <span class="sc">'W'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'w'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">72</span> <span class="p">:</span><span class="c1">//up</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="n">slect</span> <span class="o">=</span> <span class="p">(</span><span class="n">slect</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">GAMEOVERMENU_TOT</span><span class="p">)</span> <span class="o">%</span> <span class="n">GAMEOVERMENU_TOT</span><span class="p">;</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'S'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'s'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">80</span> <span class="p">:</span><span class="c1">//down</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="n">slect</span> <span class="o">=</span> <span class="p">(</span><span class="n">slect</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">GAMEOVERMENU_TOT</span><span class="p">;</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">gameover_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">' '</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">13</span> <span class="p">:</span><span class="c1">//enter</span>
				<span class="k">return</span> <span class="n">slect</span><span class="p">;</span>
			<span class="nl">default:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>	
<span class="p">}</span>
<span class="kt">int</span> <span class="nf">SetMenu</span><span class="p">(){</span>
	<span class="n">Button</span> <span class="n">set_button</span><span class="p">[</span><span class="n">OPT_TOT</span><span class="p">];</span> <span class="c1">//设置的按钮 </span>
	<span class="n">ifstream</span> <span class="n">fin</span><span class="p">;</span> <span class="n">string</span> <span class="n">tmmp</span><span class="p">;</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//button//setmenu.button"</span><span class="p">);</span><span class="c1">//载入 </span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">OPT_L_R</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">OPT_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">string</span> <span class="n">s</span><span class="p">;</span> <span class="kt">int</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">,</span> <span class="n">xpos</span><span class="p">,</span> <span class="n">ypos</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">xpos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">ypos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">c1</span> <span class="o">&gt;&gt;</span> <span class="n">c2</span><span class="p">;</span>
		<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">OPT_L_R</span><span class="p">;</span> <span class="n">slect</span> <span class="o">&lt;</span> <span class="n">OPT_TOT</span><span class="p">;</span> <span class="n">slect</span><span class="o">++</span><span class="p">){</span>
		<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
		<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="p">}</span>
	<span class="kt">int</span> <span class="n">slect</span> <span class="o">=</span> <span class="n">set_opt</span><span class="p">;</span>
	<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
	<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
	<span class="n">Button</span> <span class="n">discribe</span><span class="p">[</span><span class="n">OPT_TOT</span><span class="p">][</span><span class="n">DISCRIBE_LEN</span><span class="p">];</span> <span class="kt">int</span> <span class="n">len</span><span class="p">[</span><span class="n">OPT_TOT</span><span class="p">];</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">open</span><span class="p">(</span><span class="s">"data//others//discribe.txt"</span><span class="p">);</span>
	<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">fin</span><span class="p">.</span><span class="n">is_open</span><span class="p">()){</span>
		<span class="n">system</span><span class="p">(</span><span class="s">"cls"</span><span class="p">);</span>
		<span class="n">cout</span><span class="o">&lt;&lt;</span><span class="s">"数据丢失，请检查数据文件后重新启动游戏"</span><span class="p">;</span>
		<span class="n">exit</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="n">OPT_L_R</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">OPT_TOT</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
		<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">len</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
		<span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;=</span> <span class="n">len</span><span class="p">[</span><span class="n">i</span><span class="p">];</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
			<span class="n">string</span> <span class="n">s</span><span class="p">;</span> <span class="kt">int</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">,</span> <span class="n">xpos</span><span class="p">,</span> <span class="n">ypos</span><span class="p">;</span>
			<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">s</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
			<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">xpos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">ypos</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span><span class="p">;</span>
			<span class="n">fin</span> <span class="o">&gt;&gt;</span> <span class="n">tmmp</span> <span class="o">&gt;&gt;</span> <span class="n">c1</span> <span class="o">&gt;&gt;</span> <span class="n">c2</span><span class="p">;</span>
			<span class="n">discribe</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">].</span><span class="n">Set</span><span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">Point</span><span class="p">(</span><span class="n">xpos</span><span class="p">,</span><span class="n">ypos</span><span class="p">),</span> <span class="n">c1</span><span class="p">,</span> <span class="n">c2</span><span class="p">);</span>
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="n">fin</span><span class="p">.</span><span class="n">close</span><span class="p">();</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;=</span> <span class="n">len</span><span class="p">[</span><span class="n">slect</span><span class="p">];</span> <span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="n">discribe</span><span class="p">[</span><span class="n">slect</span><span class="p">][</span><span class="n">i</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
		<span class="n">Sleep</span><span class="p">(</span><span class="n">SPEED</span><span class="p">);</span>
	<span class="p">}</span>
	<span class="k">while</span><span class="p">(</span><span class="nb">true</span><span class="p">){</span>
		<span class="k">switch</span><span class="p">(</span><span class="n">getch</span><span class="p">()){</span>
			<span class="k">case</span> <span class="sc">'A'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'a'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">75</span> <span class="p">:</span><span class="c1">//left</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				
				<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">len</span><span class="p">[</span><span class="n">slect</span><span class="p">];</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
					<span class="n">discribe</span><span class="p">[</span><span class="n">slect</span><span class="p">][</span><span class="n">i</span><span class="p">].</span><span class="n">pos</span><span class="p">.</span><span class="n">Clear</span><span class="p">();</span>
				
				<span class="n">slect</span> <span class="o">=</span> <span class="p">(</span><span class="n">slect</span> <span class="o">-</span> <span class="mi">1</span> <span class="o">+</span> <span class="n">OPT_TOT</span><span class="p">)</span> <span class="o">%</span> <span class="n">OPT_TOT</span><span class="p">;</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				
				<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">len</span><span class="p">[</span><span class="n">slect</span><span class="p">];</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
					<span class="n">discribe</span><span class="p">[</span><span class="n">slect</span><span class="p">][</span><span class="n">i</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
					<span class="n">Sleep</span><span class="p">(</span><span class="n">SPEED</span><span class="p">);</span>
				<span class="p">}</span>
				
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">'D'</span><span class="p">:</span>
			<span class="k">case</span> <span class="sc">'d'</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">77</span> <span class="p">:</span><span class="c1">//right</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">false</span><span class="p">;</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				
				<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">len</span><span class="p">[</span><span class="n">slect</span><span class="p">];</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
					<span class="n">discribe</span><span class="p">[</span><span class="n">slect</span><span class="p">][</span><span class="n">i</span><span class="p">].</span><span class="n">pos</span><span class="p">.</span><span class="n">Clear</span><span class="p">();</span>
				
				<span class="n">slect</span><span class="o">=</span><span class="p">(</span><span class="n">slect</span> <span class="o">+</span> <span class="mi">1</span><span class="p">)</span> <span class="o">%</span> <span class="n">OPT_TOT</span><span class="p">;</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">slect</span> <span class="o">=</span> <span class="nb">true</span><span class="p">;</span>
				<span class="n">set_button</span><span class="p">[</span><span class="n">slect</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
				
				<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;=</span><span class="n">len</span><span class="p">[</span><span class="n">slect</span><span class="p">];</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
					<span class="n">discribe</span><span class="p">[</span><span class="n">slect</span><span class="p">][</span><span class="n">i</span><span class="p">].</span><span class="n">Print</span><span class="p">();</span>
					<span class="n">Sleep</span><span class="p">(</span><span class="n">SPEED</span><span class="p">);</span>
				<span class="p">}</span>
				
				<span class="k">break</span><span class="p">;</span>
			<span class="k">case</span> <span class="sc">' '</span><span class="p">:</span>
			<span class="k">case</span> <span class="mi">13</span> <span class="p">:</span><span class="c1">//enter</span>
				<span class="k">return</span> <span class="n">slect</span><span class="p">;</span>
			<span class="nl">default:</span><span class="k">break</span><span class="p">;</span>
		<span class="p">}</span>
	<span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>]]></content><author><name>Xueyang Chen</name></author><category term="game" /><category term="c++" /><summary type="html"><![CDATA[总览]]></summary></entry><entry><title type="html">Mermaid example</title><link href="https://anoxiacxy.github.io/example/2017/12/08/mermaid-example.html" rel="alternate" type="text/html" title="Mermaid example" /><published>2017-12-08T00:00:00+00:00</published><updated>2017-12-08T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/example/2017/12/08/mermaid-example</id><content type="html" xml:base="https://anoxiacxy.github.io/example/2017/12/08/mermaid-example.html"><![CDATA[<h3 id="1-pie-chart">1. Pie chart</h3>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoicGllIHRpdGxlIFBldHMgYWRvcHRlZCBieSB2b2x1bnRlZXJzXG5cIkRvZ3NcIiA6IDM4NlxuXCJDYXRzXCIgOiA4NVxuXCJSYXRzXCIgOiAzNSIsIm1lcm1haWQiOm51bGx9" /></p>

<h3 id="2-sequence-diagram">2. sequence diagram</h3>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic2VxdWVuY2VEaWFncmFtXG5BbGljZSAtPj4gQm9iOiBIZWxsbyBCb2IsIGhvdyBhcmUgeW91P1xuQm9iLS0-PkpvaG46IEhvdyBhYm91dCB5b3UgSm9obj9cbkJvYi0teCBBbGljZTogSSBhbSBnb29kIHRoYW5rcyFcbkJvYi14IEpvaG46IEkgYW0gZ29vZCB0aGFua3MhXG5Ob3RlIHJpZ2h0IG9mIEpvaG46IEJvYiB0aGlua3MgYSBsb25nPGJyLz5sb25nIHRpbWUsIHNvIGxvbmc8YnIvPnRoYXQgdGhlIHRleHQgZG9lczxici8-bm90IGZpdCBvbiBhIHJvdy5cbiUlLVxuQm9iLS0-QWxpY2U6IENoZWNraW5nIHdpdGggSm9obi4uLlxuQWxpY2UtPkpvaG46IFllcy4uLiBKb2huLCBob3cgYXJlIHlvdT8iLCJtZXJtYWlkIjpudWxsfQ" /></p>

<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoiZ3JhcGggVERcbkFbQ2hyaXN0bWFzXSAtLT58R2V0IG1vbmV5fCBCKEdvIHNob3BwaW5nKVxuQiAtLT4gQ3tMZXQgbWUgdGhpbmt9XG5DIC0tPnxPbmV8IERbTGFwdG9wXVxuQyAtLT58VHdvfCBFW2lQaG9uZV1cbkMgLS0-fFRocmVlfCBGW2ZhOmZhLWNhciBDYXJdIiwibWVybWFpZCI6bnVsbH0" /></p>

<h3 id="3-class-diagram">3. Class diagram</h3>
<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoiY2xhc3NEaWFncmFtXG5BbmltYWwgPHwtLSBEdWNrXG5BbmltYWwgPHwtLSBGaXNoXG5BbmltYWwgPHwtLSBaZWJyYVxuQW5pbWFsIDogK2ludCBhZ2VcbkFuaW1hbCA6ICtTdHJpbmcgZ2VuZGVyXG5BbmltYWw6ICtpc01hbW1hbCgpXG5BbmltYWw6ICttYXRlKClcbmNsYXNzIER1Y2t7XG4rU3RyaW5nIGJlYWtDb2xvclxuK3N3aW0oKVxuK3F1YWNrKClcbn1cbmNsYXNzIEZpc2h7XG4taW50IHNpemVJbkZlZXRcbi1jYW5FYXQoKVxufVxuY2xhc3MgWmVicmF7XG4rYm9vbCBpc193aWxkXG4rcnVuKClcbn0iLCJtZXJtYWlkIjpudWxsfQ" /></p>

<h3 id="4-state-diagram">4. State diagram</h3>
<p><img class="mermaid" src="https://mermaid.ink/svg/eyJjb2RlIjoic3RhdGVEaWFncmFtXG5bKl0gLS0-IFN0aWxsXG5TdGlsbCAtLT4gWypdXG4lJS1cblN0aWxsIC0tPiBNb3Zpbmdcbk1vdmluZyAtLT4gU3RpbGxcbk1vdmluZyAtLT4gQ3Jhc2hcbkNyYXNoIC0tPiBbKl0iLCJtZXJtYWlkIjpudWxsfQ" /></p>]]></content><author><name>Xueyang Chen</name></author><category term="example" /><category term="mermaid" /><summary type="html"><![CDATA[1. Pie chart]]></summary></entry><entry><title type="html">Plantuml example</title><link href="https://anoxiacxy.github.io/example/2017/12/04/plantuml-example.html" rel="alternate" type="text/html" title="Plantuml example" /><published>2017-12-04T00:00:00+00:00</published><updated>2017-12-04T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/example/2017/12/04/plantuml-example</id><content type="html" xml:base="https://anoxiacxy.github.io/example/2017/12/04/plantuml-example.html"><![CDATA[<h2 id="my-first-plantuml">My First PlantUML</h2>

<h3 id="plantuml-block-1">PlantUML Block-1</h3>
<p><img class="plantuml" src="http://www.plantuml.com/plantuml/svg/~h407374617274756d6c0a426f62202d3e20416c696365203a2068656c6c6f0a40656e64756d6c" /></p>

<h3 id="plantuml-block-2">PlantUML Block-2</h3>
<p><img class="plantuml" src="http://www.plantuml.com/plantuml/svg/~h407374617274756d6c0a426f62202d3e20416c696365203a2068656c6c6f20776f726c640a40656e64756d6c" /></p>

<h3 id="plantuml-block-3">PlantUML Block-3</h3>
<p><img class="plantuml" src="http://www.plantuml.com/plantuml/svg/~h407374617274756d6c0a282a29202d2d3e2022496e697469616c697a6174696f6e220a0a69662022536f6d65205465737422207468656e0a20202d2d3e5b747275655d2022536f6d65204163746976697479220a20202d2d3e2022416e6f74686572206163746976697479220a20202d72696768742d3e20282a290a656c73650a20202d3e5b66616c73655d2022536f6d657468696e6720656c7365220a20202d2d3e5b456e64696e672070726f636573735d20282a290a656e6469660a40656e64756d6c" /></p>

<h3 id="plantuml-block-4">PlantUML Block-4</h3>

<p><img class="plantuml" src="http://www.plantuml.com/plantuml/svg/~h407374617274756d6c0a736b696e706172616d2068616e647772697474656e20747275650a0a736b696e706172616d2075736563617365207b0a20204261636b67726f756e64436f6c6f72204461726b536561477265656e0a2020426f72646572436f6c6f72204461726b536c617465477261790a0a20204261636b67726f756e64436f6c6f723c3c204d61696e203e3e2059656c6c6f77477265656e0a2020426f72646572436f6c6f723c3c204d61696e203e3e2059656c6c6f77477265656e0a0a20204172726f77436f6c6f72204f6c6976650a20204163746f72426f72646572436f6c6f7220626c61636b0a20204163746f72466f6e744e616d6520436f75726965720a0a20204163746f724261636b67726f756e64436f6c6f723c3c2048756d616e203e3e20476f6c640a7d0a0a55736572203c3c2048756d616e203e3e0a3a4d61696e2044617461626173653a206173204d7953716c203c3c204170706c69636174696f6e203e3e0a28537461727429203c3c204f6e652053686f74203e3e0a2855736520746865206170706c69636174696f6e29206173202855736529203c3c204d61696e203e3e0a0a55736572202d3e20285374617274290a55736572202d2d3e2028557365290a0a4d7953716c202d2d3e2028557365290a0a40656e64756d6c" /></p>]]></content><author><name>Xueyang Chen</name></author><category term="example" /><category term="plantuml" /><summary type="html"><![CDATA[My First PlantUML]]></summary></entry><entry><title type="html">Quick markdown example</title><link href="https://anoxiacxy.github.io/markdown/2017/06/10/quick-mardown-example.html" rel="alternate" type="text/html" title="Quick markdown example" /><published>2017-06-10T00:00:00+00:00</published><updated>2017-06-10T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/markdown/2017/06/10/quick-mardown-example</id><content type="html" xml:base="https://anoxiacxy.github.io/markdown/2017/06/10/quick-mardown-example.html"><![CDATA[<p>Paragraphs are separated by a blank line.</p>

<p>2nd paragraph. <em>Italic</em>, <strong>bold</strong>, and <code class="language-plaintext highlighter-rouge">monospace</code>. Itemized lists
look like:</p>

<ul>
  <li>this one</li>
  <li>that one</li>
  <li>the other one</li>
</ul>

<p>Note that — not considering the asterisk — the actual text
content starts at 4-columns in.</p>

<blockquote>
  <p>Block quotes are
written like so.</p>

  <p>They can span multiple paragraphs,
if you like.</p>
</blockquote>

<p>Use 3 dashes for an em-dash. Use 2 dashes for ranges (ex., “it’s all
in chapters 12–14”). Three dots … will be converted to an ellipsis.
Unicode is supported. ☺</p>

<h2 id="an-h2-header">An h2 header</h2>

<p>Here’s a numbered list:</p>

<ol>
  <li>first item</li>
  <li>second item</li>
  <li>third item</li>
</ol>

<p>Note again how the actual text starts at 4 columns in (4 characters
from the left side). Here’s a code sample:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Let me re-iterate ...
for i in 1 .. 10 { do-something(i) }
</code></pre></div></div>

<p>As you probably guessed, indented 4 spaces. By the way, instead of
indenting the block, you can use delimited blocks, if you like:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>define foobar() {
    print "Welcome to flavor country!";
}
</code></pre></div></div>

<p>(which makes copying &amp; pasting easier). You can optionally mark the
delimited block for Pandoc to syntax highlight it:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">time</span>
<span class="c1"># Quick, count to ten!
</span><span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">):</span>
    <span class="c1"># (but not *too* quick)
</span>    <span class="n">time</span><span class="p">.</span><span class="n">sleep</span><span class="p">(</span><span class="mf">0.5</span><span class="p">)</span>
    <span class="k">print</span><span class="p">(</span><span class="n">i</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="an-h3-header">An h3 header</h3>

<p>Now a nested list:</p>

<ol>
  <li>
    <p>First, get these ingredients:</p>

    <ul>
      <li>carrots</li>
      <li>celery</li>
      <li>lentils</li>
    </ul>
  </li>
  <li>
    <p>Boil some water.</p>
  </li>
  <li>
    <p>Dump everything in the pot and follow
this algorithm:</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>find wooden spoon
uncover pot
stir
cover pot
balance wooden spoon precariously on pot handle
wait 10 minutes
goto first step (or shut off burner when done)
</code></pre></div>    </div>

    <p>Do not bump wooden spoon or it will fall.</p>
  </li>
</ol>

<p>Notice again how text always lines up on 4-space indents (including
that last line which continues item 3 above).</p>

<p>Here’s a link to <a href="http://foo.bar">a website</a>, to a <a href="local-doc.html">local
doc</a>, and to a <a href="#an-h2-header">section heading in the current
doc</a>. Here’s a footnote <sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>.</p>

<p>Tables can look like this:</p>

<p>Name           Size  Material      Color
————- —–  ————  ————
All Business      9  leather       brown
Roundabout       10  hemp canvas   natural
Cinderella       11  glass         transparent</p>

<p>Table: Shoes sizes, materials, and colors.</p>

<p>(The above is the caption for the table.) Pandoc also supports
multi-line tables:</p>

<hr />
<p>Keyword   Text
——–  ———————–
red       Sunsets, apples, and
          other red or reddish
          things.</p>

<p>green     Leaves, grass, frogs
          and other things it’s
          not easy being.
——–  ———————–</p>

<p>A horizontal rule follows.</p>

<hr />

<p>Here’s a definition list:</p>

<dl>
  <dt>apples</dt>
  <dd>Good for making applesauce.</dd>
  <dt>oranges</dt>
  <dd>Citrus!</dd>
  <dt>tomatoes</dt>
  <dd>There’s no “e” in tomatoe.</dd>
</dl>

<p>Again, text is indented 4 spaces. (Put a blank line between each
term and  its definition to spread things out more.)</p>

<p>Here’s a “line block” (note how whitespace is honored):</p>

<table>
  <tbody>
    <tr>
      <td>Line one</td>
    </tr>
    <tr>
      <td>Line too</td>
    </tr>
    <tr>
      <td>Line tree</td>
    </tr>
  </tbody>
</table>

<p>and images can be specified like so:</p>

<p><img src="https://user-images.githubusercontent.com/9413601/123900693-1d9ebd00-d99c-11eb-8e9e-cf7879187606.png" alt="example image" title="An exemplary image" /></p>

<p>Inline math equation: $\omega = d\phi / dt$. Display
math should get its own line like so:</p>

<p>$$I = \int \rho R^{2} dV$$</p>

<p>And note that you can backslash-escape any punctuation characters
which you wish to be displayed literally, ex.: `foo`, *bar*, etc.</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>Some footnote text. <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>Xueyang Chen</name></author><category term="markdown" /><category term="example" /><summary type="html"><![CDATA[Paragraphs are separated by a blank line.]]></summary></entry><entry><title type="html">This post demonstrates post content styles</title><link href="https://anoxiacxy.github.io/junk/2017/05/20/this-post-demonstrates-post-content-styles.html" rel="alternate" type="text/html" title="This post demonstrates post content styles" /><published>2017-05-20T00:00:00+00:00</published><updated>2017-05-20T00:00:00+00:00</updated><id>https://anoxiacxy.github.io/junk/2017/05/20/this-post-demonstrates-post-content-styles</id><content type="html" xml:base="https://anoxiacxy.github.io/junk/2017/05/20/this-post-demonstrates-post-content-styles.html"><![CDATA[<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit.</p>

<h2 id="some-great-heading-h2">Some great heading (h2)</h2>

<p>Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu.</p>

<p>Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.</p>

<h2 id="another-great-heading-h2">Another great heading (h2)</h2>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit.</p>

<h3 id="some-great-subheading-h3">Some great subheading (h3)</h3>

<p>Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum. In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum.</p>

<p>Phasellus et hendrerit mauris. Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc.</p>

<h3 id="some-great-subheading-h3-1">Some great subheading (h3)</h3>

<p>Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.</p>

<blockquote>
  <p>This quote will change your life. It will reveal the secrets of the universe, and all the wonders of humanity. Don’t misuse it.</p>
</blockquote>

<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt.</p>

<h3 id="some-great-subheading-h3-2">Some great subheading (h3)</h3>

<p>Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit. Proin convallis mi ac felis pharetra aliquam. Curabitur dignissim accumsan rutrum.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
  <span class="nt">&lt;head&gt;</span> <span class="nt">&lt;/head&gt;</span>
  <span class="nt">&lt;body&gt;</span>
    <span class="nt">&lt;p&gt;</span>Hello, World!<span class="nt">&lt;/p&gt;</span>
  <span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.</p>

<h4 id="you-might-want-a-sub-subheading-h4">You might want a sub-subheading (h4)</h4>

<p>In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.</p>

<p>In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.</p>

<h4 id="but-its-probably-overkill-h4">But it’s probably overkill (h4)</h4>

<p>In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.</p>

<h3 id="oh-hai-an-unordered-list">Oh hai, an unordered list!!</h3>

<p>In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.</p>

<ul>
  <li>First item, yo</li>
  <li>Second item, dawg</li>
  <li>Third item, what what?!</li>
  <li>Fourth item, fo sheezy my neezy</li>
</ul>

<h3 id="oh-hai-an-ordered-list">Oh hai, an ordered list!!</h3>

<p>In arcu magna, aliquet vel pretium et, molestie et arcu. Mauris lobortis nulla et felis ullamcorper bibendum. Phasellus et hendrerit mauris.</p>

<ol>
  <li>First item, yo</li>
  <li>Second item, dawg</li>
  <li>Third item, what what?!</li>
  <li>Fourth item, fo sheezy my neezy</li>
</ol>

<h2 id="headings-are-cool-h2">Headings are cool! (h2)</h2>

<p>Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc. Praesent varius interdum vehicula. Aenean risus libero, placerat at vestibulum eget, ultricies eu enim. Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.</p>

<p>Praesent nulla tortor, malesuada adipiscing adipiscing sollicitudin, adipiscing eget est.</p>

<p>Proin eget nibh a massa vestibulum pretium. Suspendisse eu nisl a ante aliquet bibendum quis a nunc.</p>

<h3 id="tables">Tables</h3>

<table>
  <thead>
    <tr>
      <th>Title 1</th>
      <th>Title 2</th>
      <th>Title 3</th>
      <th>Title 4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>lorem</td>
      <td>lorem ipsum</td>
      <td>lorem ipsum dolor</td>
      <td>lorem ipsum dolor sit</td>
    </tr>
    <tr>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
    </tr>
    <tr>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
    </tr>
    <tr>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit</td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th>Title 1</th>
      <th>Title 2</th>
      <th>Title 3</th>
      <th>Title 4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>lorem</td>
      <td>lorem ipsum</td>
      <td>lorem ipsum dolor</td>
      <td>lorem ipsum dolor sit</td>
    </tr>
    <tr>
      <td>lorem ipsum dolor sit amet</td>
      <td>lorem ipsum dolor sit amet consectetur</td>
      <td>lorem ipsum dolor sit amet</td>
      <td>lorem ipsum dolor sit</td>
    </tr>
    <tr>
      <td>lorem ipsum dolor</td>
      <td>lorem ipsum</td>
      <td>lorem</td>
      <td>lorem ipsum</td>
    </tr>
    <tr>
      <td>lorem ipsum dolor</td>
      <td>lorem ipsum dolor sit</td>
      <td>lorem ipsum dolor sit amet</td>
      <td>lorem ipsum dolor sit amet consectetur</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Bart Simpson</name></author><category term="junk" /><summary type="html"><![CDATA[Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce bibendum neque eget nunc mattis eu sollicitudin enim tincidunt. Vestibulum lacus tortor, ultricies id dignissim ac, bibendum in velit.]]></summary></entry></feed>